{"version":3,"sources":["constants/constants.js","components/animation.jsx","components/display.jsx","components/scores.jsx","components/game.jsx","App.js","serviceWorker.js","index.js"],"names":["I_ORIENT","reverse","I","value","origin","x","y","orient","cells","T_ORIENT","T","S_ORIENT","S","Z_ORIENT","Z","O_ORIENT","O","J_ORIENT","J","L_ORIENT","L","LEVEL_SPEEDS","levels","speeds","Canvas","props","componentDidMount","document","addEventListener","handleKeyPress","drawBoard","componentWillUnmount","removeEventListener","componentDidUpdate","canvas","canvasRef","current","ctx","getContext","board","tetromino","width","height","j","i","drawCell","length","createRef","ref","this","Component","Animation","rAF","requestAnimationFrame","updateAnimationState","shouldComponentUpdate","AnimationFlag","cancelAnimationFrame","render","lastUpdate","Date","now","React","pos","offset","isLocked","scale","isNextPeice","save","translate","decSaturation","fillStyle","fillRect","lineWidth","rect","restore","stroke","Display","className","isNewGame","onClick","handleStartGame","handleOpenScores","aria-hidden","Scores","state","isLoading","isError","setTimeout","handleCloseScores","scores","serverData","map","a","score","console","log","index","key","fetch","then","res","json","data","setState","catch","error","Game","initialState","Array","createTetromino","que","linesCleared","gameOver","isDisplay","clearTimeout","timeOut","submitScore","scoreObj","method","headers","body","JSON","stringify","tetrominoTypes","CONST","Math","floor","random","lockTetromino","findPos","parse","forEach","clearLines","cellPositions","clearRows","Set","filter","rowNum","includes","boardCopy","sort","splice","push","fill","points","tetrominoBottomedOut","levelIndex","findIndex","element","min","speed","copyQueTetromino","spawnedTetromino","spawnTetromino","checkCollision","dropTime","drawNextPiece","nextDrop","copyTetromino","resetTimeout","positions","some","e","forceUpdate","keyCode","code","downFlag","orientations","reset","isScores","beginPath","clearRect","offsetVisualCenter","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c8530c2b.chunk.js","sourcesContent":["export const GAME_INTERVAL = 12; //12 ms per interval = 60 fps\r\nexport const HEIGHT = 22;\r\nexport const HEIGHT_VIS = 20;\r\nexport const WIDTH = 10;\r\n\r\nexport const I_ORIENT = [\r\n\t[\r\n\t\t[0, 0, 0, 0],\r\n\t\t[1, 1, 1, 1],\r\n\t\t[0, 0, 0, 0],\r\n\t\t[0, 0, 0, 0],\r\n\t].reverse(),\r\n\t[\r\n\t\t[0, 0, 1, 0],\r\n\t\t[0, 0, 1, 0],\r\n\t\t[0, 0, 1, 0],\r\n\t\t[0, 0, 1, 0],\r\n\t].reverse(),\r\n\t[\r\n\t\t[0, 0, 0, 0],\r\n\t\t[0, 0, 0, 0],\r\n\t\t[1, 1, 1, 1],\r\n\t\t[0, 0, 0, 0],\r\n\t].reverse(),\r\n\t[\r\n\t\t[0, 1, 0, 0],\r\n\t\t[0, 1, 0, 0],\r\n\t\t[0, 1, 0, 0],\r\n\t\t[0, 1, 0, 0],\r\n\t].reverse(),\r\n];\r\n\r\nexport const I = {\r\n\tvalue: \"I\",\r\n\torigin: { x: 3, y: 18 },\r\n\torient: 0,\r\n\tcells: I_ORIENT[0],\r\n};\r\n\r\nexport const T_ORIENT = [\r\n\t[\r\n\t\t[0, 1, 0],\r\n\t\t[1, 1, 1],\r\n\t\t[0, 0, 0],\r\n\t].reverse(),\r\n\t[\r\n\t\t[0, 1, 0],\r\n\t\t[0, 1, 1],\r\n\t\t[0, 1, 0],\r\n\t].reverse(),\r\n\t[\r\n\t\t[0, 0, 0],\r\n\t\t[1, 1, 1],\r\n\t\t[0, 1, 0],\r\n\t].reverse(),\r\n\t[\r\n\t\t[0, 1, 0],\r\n\t\t[1, 1, 0],\r\n\t\t[0, 1, 0],\r\n\t].reverse(),\r\n];\r\n\r\nexport const T = {\r\n\tvalue: \"T\",\r\n\torigin: { x: 3, y: 19 },\r\n\torient: 0,\r\n\tcells: T_ORIENT[0],\r\n};\r\n\r\nexport const S_ORIENT = [\r\n\t[\r\n\t\t[0, 1, 1],\r\n\t\t[1, 1, 0],\r\n\t\t[0, 0, 0],\r\n\t].reverse(),\r\n\r\n\t[\r\n\t\t[0, 1, 0],\r\n\t\t[0, 1, 1],\r\n\t\t[0, 0, 1],\r\n\t].reverse(),\r\n\r\n\t[\r\n\t\t[0, 0, 0],\r\n\t\t[0, 1, 1],\r\n\t\t[1, 1, 0],\r\n\t].reverse(),\r\n\r\n\t[\r\n\t\t[1, 0, 0],\r\n\t\t[1, 1, 0],\r\n\t\t[0, 1, 0],\r\n\t].reverse(),\r\n];\r\n\r\nexport const S = {\r\n\tvalue: \"S\",\r\n\torigin: { x: 3, y: 19 },\r\n\torient: 0,\r\n\tcells: S_ORIENT[0],\r\n};\r\n\r\nexport const Z_ORIENT = [\r\n\t[\r\n\t\t[1, 1, 0],\r\n\t\t[0, 1, 1],\r\n\t\t[0, 0, 0],\r\n\t].reverse(),\r\n\t[\r\n\t\t[0, 0, 1],\r\n\t\t[0, 1, 1],\r\n\t\t[0, 1, 0],\r\n\t].reverse(),\r\n\t[\r\n\t\t[0, 0, 0],\r\n\t\t[1, 1, 0],\r\n\t\t[0, 1, 1],\r\n\t].reverse(),\r\n\t[\r\n\t\t[0, 1, 0],\r\n\t\t[1, 1, 0],\r\n\t\t[1, 0, 0],\r\n\t].reverse(),\r\n];\r\n\r\nexport const Z = {\r\n\tvalue: \"Z\",\r\n\torigin: { x: 3, y: 19 },\r\n\torient: 0,\r\n\tcells: Z_ORIENT[0],\r\n};\r\n\r\nexport const O_ORIENT = [\r\n\t[\r\n\t\t[1, 1],\r\n\t\t[1, 1],\r\n\t].reverse(),\r\n\t[\r\n\t\t[1, 1],\r\n\t\t[1, 1],\r\n\t].reverse(),\r\n\t[\r\n\t\t[1, 1],\r\n\t\t[1, 1],\r\n\t].reverse(),\r\n\t[\r\n\t\t[1, 1],\r\n\t\t[1, 1],\r\n\t].reverse(),\r\n];\r\n\r\nexport const O = {\r\n\tvalue: \"O\",\r\n\torigin: { x: 4, y: 20 },\r\n\torient: 0,\r\n\tcells: O_ORIENT[0],\r\n};\r\n\r\nexport const J_ORIENT = [\r\n\t[\r\n\t\t[1, 0, 0],\r\n\t\t[1, 1, 1],\r\n\t\t[0, 0, 0],\r\n\t].reverse(),\r\n\t[\r\n\t\t[0, 1, 1],\r\n\t\t[0, 1, 0],\r\n\t\t[0, 1, 0],\r\n\t].reverse(),\r\n\t[\r\n\t\t[0, 0, 0],\r\n\t\t[1, 1, 1],\r\n\t\t[0, 0, 1],\r\n\t].reverse(),\r\n\t[\r\n\t\t[0, 1, 0],\r\n\t\t[0, 1, 0],\r\n\t\t[1, 1, 0],\r\n\t].reverse(),\r\n];\r\n\r\nexport const J = {\r\n\tvalue: \"J\",\r\n\torigin: { x: 4, y: 19 },\r\n\torient: 0,\r\n\tcells: J_ORIENT[0],\r\n};\r\n\r\nexport const L_ORIENT = [\r\n\t[\r\n\t\t[0, 0, 1],\r\n\t\t[1, 1, 1],\r\n\t\t[0, 0, 0],\r\n\t].reverse(),\r\n\t[\r\n\t\t[0, 1, 0],\r\n\t\t[0, 1, 0],\r\n\t\t[0, 1, 1],\r\n\t].reverse(),\r\n\t[\r\n\t\t[0, 0, 0],\r\n\t\t[1, 1, 1],\r\n\t\t[1, 0, 0],\r\n\t].reverse(),\r\n\t[\r\n\t\t[1, 1, 0],\r\n\t\t[0, 1, 0],\r\n\t\t[0, 1, 0],\r\n\t].reverse(),\r\n];\r\n\r\nexport const L = {\r\n\tvalue: \"L\",\r\n\torigin: { x: 4, y: 19 },\r\n\torient: 0,\r\n\tcells: L_ORIENT[0],\r\n};\r\n\r\nexport const LEVEL_SPEEDS = {\r\n\tlevels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 16, 19, 29],\r\n\tspeeds: [\r\n\t\t800,\r\n\t\t717,\r\n\t\t633,\r\n\t\t550,\r\n\t\t467,\r\n\t\t383,\r\n\t\t300,\r\n\t\t217,\r\n\t\t133,\r\n\t\t100,\r\n\t\t83,\r\n\t\t67,\r\n\t\t50,\r\n\t\t33,\r\n\t\t17,\r\n\t],\r\n};\r\n\r\nexport const SCALE = 40;\r\n","import React, { Component, createRef } from \"react\";\r\nimport * as CONST from \"../constants/constants.js\";\r\nimport \"./canvas.css\";\r\n\r\nclass Canvas extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.canvasRef = createRef();\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tdocument.addEventListener(\"keydown\", this.props.handleKeyPress);\r\n\t\tthis.drawBoard();\r\n\t};\r\n\r\n\tcomponentWillUnmount = () => {\r\n\t\tdocument.removeEventListener(\"keydown\", this.props.handleKeyPress);\r\n\t};\r\n\r\n\tcomponentDidUpdate = () => {\r\n\t\tthis.drawBoard();\r\n\t};\r\n\r\n\tdrawBoard = () => {\r\n\t\tconst canvas = this.canvasRef.current;\r\n\t\tconst ctx = canvas.getContext(\"2d\");\r\n\t\tconst board = this.props.board;\r\n\t\tconst tetromino = this.props.tetromino;\r\n\t\tcanvas.width = 10 * CONST.SCALE;\r\n\t\tcanvas.height = 20 * CONST.SCALE;\r\n\r\n\t\t// Draw Board\r\n\t\tfor (let j = 0; j < CONST.HEIGHT_VIS; j++) {\r\n\t\t\tfor (let i = 0; i < CONST.WIDTH; i++) {\r\n\t\t\t\tdrawCell(ctx, { x: i, y: j }, { x: 0, y: 0 }, board[j][i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//Draw Tetromino\r\n\t\tfor (let j = 0; j < tetromino.cells.length; j++) {\r\n\t\t\tfor (let i = 0; i < tetromino.cells[0].length; i++) {\r\n\t\t\t\tif (tetromino.cells[j][i]) {\r\n\t\t\t\t\tdrawCell(\r\n\t\t\t\t\t\tctx,\r\n\t\t\t\t\t\t{ x: i, y: j },\r\n\t\t\t\t\t\ttetromino.origin,\r\n\t\t\t\t\t\ttetromino.value,\r\n\t\t\t\t\t\tfalse\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn <canvas ref={this.canvasRef} />;\r\n\t}\r\n}\r\n\r\nexport default Canvas;\r\n\r\nexport class Animation extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.AnimationFlag = false;\r\n\t\tthis.lastUpdate = Date.now();\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tthis.rAF = requestAnimationFrame(this.updateAnimationState);\r\n\t};\r\n\r\n\tshouldComponentUpdate = () => {\r\n\t\treturn this.AnimationFlag;\r\n\t};\r\n\r\n\tcomponentDidUpdate = () => {\r\n\t\tthis.AnimationFlag = false;\r\n\t};\r\n\r\n\tupdateAnimationState = () => {\r\n\t\tthis.rAF = requestAnimationFrame(this.updateAnimationState);\r\n\t\tthis.AnimationFlag = true;\r\n\t};\r\n\r\n\tcomponentWillUnmount = () => {\r\n\t\tcancelAnimationFrame(this.rAF);\r\n\t};\r\n\r\n\trender = () => {\r\n\t\treturn <Canvas {...this.props} />;\r\n\t};\r\n}\r\n\r\nexport function drawCell(\r\n\tctx,\r\n\tpos,\r\n\toffset = { x: 0, y: 0 },\r\n\tvalue = null,\r\n\tisLocked = true,\r\n\tscale = CONST.SCALE,\r\n\tisNextPeice = false\r\n) {\r\n\tctx.save();\r\n\tctx.scale(1 * scale, -1 * scale);\r\n\tif (!isNextPeice) {\r\n\t\tctx.translate(0, -CONST.HEIGHT_VIS);\r\n\t}\r\n\tctx.translate(pos.x + offset.x, pos.y + offset.y);\r\n\r\n\t// Lower Saturation on tetromino after they are placed\r\n\tconst decSaturation = isLocked ? -25 : 0;\r\n\r\n\tswitch (value) {\r\n\t\tcase \"I\":\r\n\t\t\tctx.fillStyle = \"hsl(192.7, \" + (73.8 + decSaturation) + \"%, 68.7%)\";\r\n\t\t\tbreak;\r\n\t\tcase \"J\":\r\n\t\t\tctx.fillStyle = \"hsl(217.2, \" + (100 + decSaturation) + \"%, 36.7%)\";\r\n\t\t\tbreak;\r\n\t\tcase \"L\":\r\n\t\t\tctx.fillStyle = \"hsl(38.3, \" + (100 + decSaturation) + \"%, 50%)\";\r\n\t\t\tbreak;\r\n\t\tcase \"S\":\r\n\t\t\tctx.fillStyle = \"hsl(111.5, \" + (67.4 + decSaturation) + \"%, 50.6%)\";\r\n\t\t\tbreak;\r\n\t\tcase \"Z\":\r\n\t\t\tctx.fillStyle = \"hsl(355.8, \" + (85.4 + decSaturation) + \"%, 56.9%)\";\r\n\t\t\tbreak;\r\n\t\tcase \"T\":\r\n\t\t\tctx.fillStyle = \"hsl(300, \" + (64 + decSaturation) + \"%, 44.7%)\";\r\n\t\t\tbreak;\r\n\t\tcase \"O\":\r\n\t\t\tctx.fillStyle = \"hsl(51.7, \" + (100 + decSaturation) + \"%, 49.8%)\";\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tctx.fillStyle = \"hsl(214.3, 4%, 33.9%)\";\r\n\t\t\tbreak;\r\n\t}\r\n\tctx.fillRect(0, 0, 1, 1);\r\n\tctx.lineWidth = ~~(1 / scale);\r\n\tctx.rect(0, 0, 1, 1);\r\n\tctx.restore();\r\n\tctx.stroke();\r\n}\r\n","import React from \"react\";\r\nimport \"./display.css\";\r\n\r\nconst Display = (props) => (\r\n\t<div className=\"display\">\r\n\t\t{props.isNewGame ? \"START\" : \"GAME OVER\"}\r\n\t\t<button className=\"startButton\" onClick={props.handleStartGame}>\r\n\t\t\t{\">\"}\r\n\t\t</button>\r\n\t\t<button className=\"trophy\" onClick={props.handleOpenScores}>\r\n\t\t\t<i className=\"fa fa-trophy\" aria-hidden=\"true\"></i>\r\n\t\t</button>\r\n\t</div>\r\n);\r\n\r\nexport default Display;\r\n","import React, { Component } from \"react\";\r\nimport \"./scores.css\";\r\n\r\nclass Scores extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { isLoading: true, isError: false };\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch(\"https://tetris-backend-server.herokuapp.com/scores\")\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((data) => {\r\n\t\t\t\tthis.setState({ serverData: data, isLoading: false });\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tthis.setState({ isError: true, isLoading: false });\r\n\t\t\t});\r\n\t}\r\n\r\n\trender = () => {\r\n\t\tif (this.state.isLoading) {\r\n\t\t\treturn <div className=\"scores\">Loading ...</div>;\r\n\t\t} else if (!this.state.isError) {\r\n\t\t\tconst scores = this.state.serverData.map((a) => a.score);\r\n\t\t\tconsole.log(this.props);\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"scores\">\r\n\t\t\t\t\t<div className=\"title\">High Scores</div>\r\n\t\t\t\t\t<div className=\"scroll\">\r\n\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{scores.map((score, index) => (\r\n\t\t\t\t\t\t\t\t\t<tr key={index + 1}>\r\n\t\t\t\t\t\t\t\t\t\t<td className=\"position\">{index + 1}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td className=\"high-score\">{score}</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"closeScoresButton\"\r\n\t\t\t\t\t\tonClick={this.props.handleCloseScores}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{\"<\"}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.props.handleCloseScores();\r\n\t\t\t}, 3000);\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"scores\">\r\n\t\t\t\t\t<center>Could Not View High Scores</center>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport default Scores;\r\n","import React, { Component, createRef } from \"react\";\r\nimport { Animation, drawCell } from \"./animation.jsx\";\r\nimport * as CONST from \"../constants/constants.js\";\r\nimport \"./game.css\";\r\nimport \"./canvas.css\";\r\nimport Display from \"./display.jsx\";\r\nimport Scores from \"./scores.jsx\";\r\n\r\nclass Game extends Component {\r\n\tinitialState = () => {\r\n\t\tlet board = [...Array(CONST.HEIGHT)].map(() => Array(CONST.WIDTH));\r\n\t\tfor (let j = 0; j < CONST.HEIGHT; j++) {\r\n\t\t\tfor (let i = 0; i < CONST.WIDTH; i++) {\r\n\t\t\t\tboard[j][i] = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tboard: board,\r\n\t\t\ttetromino: this.createTetromino(),\r\n\t\t\tque: [this.createTetromino()],\r\n\t\t\tscore: 0,\r\n\t\t\tlinesCleared: 0,\r\n\t\t};\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = this.initialState();\r\n\t\tthis.state.isDisplay = true;\r\n\t\tthis.state.isScores = false;\r\n\t\tthis.canvasRef = createRef();\r\n\t\tthis.isNewGame = true;\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tthis.canvas = this.canvasRef.current;\r\n\t\tthis.ctx = this.canvas.getContext(\"2d\");\r\n\t};\r\n\r\n\tgameOver = () => {\r\n\t\tthis.setState({ isDisplay: true });\r\n\t\tclearTimeout(this.timeOut);\r\n\t\tthis.submitScore();\r\n\t};\r\n\r\n\tsubmitScore = () => {\r\n\t\tconst scoreObj = (({ score }) => ({ score }))(this.state);\r\n\r\n\t\tfetch(\"https://tetris-backend-server.herokuapp.com/scores\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(scoreObj), // body data type must match \"Content-Type\" header\r\n\t\t});\r\n\t};\r\n\r\n\treset() {\r\n\t\tthis.setState(this.initialState(), () => {\r\n\t\t\tthis.drawNextPiece();\r\n\t\t});\r\n\t\tthis.dropTime = CONST.LEVEL_SPEEDS.speeds[0];\r\n\t\tthis.resetTimeout();\r\n\t\tthis.isNewGame = false;\r\n\t\tthis.setState({ isDisplay: false });\r\n\t}\r\n\r\n\tcreateTetromino = () => {\r\n\t\tconst tetrominoTypes = [\r\n\t\t\tCONST.I,\r\n\t\t\tCONST.J,\r\n\t\t\tCONST.L,\r\n\t\t\tCONST.I,\r\n\t\t\tCONST.O,\r\n\t\t\tCONST.S,\r\n\t\t\tCONST.Z,\r\n\t\t\tCONST.T,\r\n\t\t];\r\n\r\n\t\treturn tetrominoTypes[Math.floor(Math.random() * tetrominoTypes.length)];\r\n\t};\r\n\r\n\tlockTetromino = () => {\r\n\t\tconst pos = this.findPos(this.state.tetromino);\r\n\t\tlet board = JSON.parse(JSON.stringify(this.state.board));\r\n\t\tpos.forEach((pos) => {\r\n\t\t\tboard[pos.y][pos.x] = this.state.tetromino.value;\r\n\t\t});\r\n\r\n\t\tthis.setState({\r\n\t\t\tboard: board,\r\n\t\t});\r\n\t};\r\n\r\n\tclearLines = () => {\r\n\t\tconst cellPositions = this.findPos(this.state.tetromino);\r\n\t\tconst potentialRows = [...new Set(cellPositions.map((pos) => pos.y))];\r\n\t\tconst clearRows = potentialRows.filter((rowNum) => {\r\n\t\t\treturn !this.state.board[rowNum].includes(0);\r\n\t\t});\r\n\r\n\t\tif (clearRows.length) {\r\n\t\t\tlet boardCopy = [...this.state.board];\r\n\t\t\tclearRows.sort();\r\n\t\t\tfor (let i = clearRows.length - 1; i >= 0; i--) {\r\n\t\t\t\tboardCopy.splice(clearRows[i], 1);\r\n\t\t\t\tboardCopy.push(new Array(CONST.WIDTH).fill(0));\r\n\t\t\t}\r\n\r\n\t\t\tconst linesMultiplier = [40, 100, 300, 1200][clearRows.length - 1];\r\n\t\t\tconst points = linesMultiplier * (~~(this.state.linesCleared / 10) + 1);\r\n\r\n\t\t\tthis.setState((state) => ({\r\n\t\t\t\tboard: boardCopy,\r\n\t\t\t\tlinesCleared: state.linesCleared + clearRows.length,\r\n\t\t\t\tscore: state.score + points,\r\n\t\t\t}));\r\n\t\t}\r\n\t};\r\n\r\n\tspawnTetromino(tetromino) {\r\n\t\tif (this.checkCollision(tetromino)) {\r\n\t\t\ttetromino.origin.y++;\r\n\t\t}\r\n\t\treturn tetromino;\r\n\t}\r\n\r\n\ttetrominoBottomedOut = () => {\r\n\t\tthis.lockTetromino();\r\n\t\tthis.clearLines();\r\n\t\tconst levelIndex = CONST.LEVEL_SPEEDS.levels.findIndex(\r\n\t\t\t(element) => element >= Math.min(~~(this.state.linesCleared / 10), 29)\r\n\t\t);\r\n\t\tconst speed = CONST.LEVEL_SPEEDS.speeds[levelIndex];\r\n\t\tlet copyQueTetromino = JSON.parse(JSON.stringify(this.state.que[0]));\r\n\t\tconst spawnedTetromino = this.spawnTetromino(copyQueTetromino);\r\n\t\tif (this.checkCollision(spawnedTetromino)) {\r\n\t\t\tthis.gameOver();\r\n\t\t} else {\r\n\t\t\tthis.dropTime = speed;\r\n\t\t\tthis.setState((state) => ({\r\n\t\t\t\ttetromino: spawnedTetromino,\r\n\t\t\t\tque: [this.createTetromino()],\r\n\t\t\t}));\r\n\t\t\tthis.drawNextPiece();\r\n\t\t}\r\n\t};\r\n\r\n\tnextDrop = () => {\r\n\t\tlet copyTetromino = JSON.parse(JSON.stringify(this.state.tetromino));\r\n\t\tcopyTetromino.origin.y--;\r\n\t\tif (this.checkCollision(copyTetromino)) {\r\n\t\t\tthis.tetrominoBottomedOut();\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\ttetromino: copyTetromino,\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (!this.state.isDisplay) {\r\n\t\t\tthis.resetTimeout();\r\n\t\t}\r\n\t};\r\n\r\n\tfindPos(tetromino) {\r\n\t\tconst cells = tetromino.cells;\r\n\t\tlet positions = [];\r\n\t\tfor (let j = 0; j < cells.length; j++) {\r\n\t\t\tfor (let i = 0; i < cells[0].length; i++) {\r\n\t\t\t\tif (cells[j][i]) {\r\n\t\t\t\t\tpositions.push({\r\n\t\t\t\t\t\tx: i + tetromino.origin.x,\r\n\t\t\t\t\t\ty: j + tetromino.origin.y,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn positions;\r\n\t}\r\n\r\n\tcheckCollision = (tetromino) => {\r\n\t\tconst positions = this.findPos(tetromino);\r\n\t\tconst board = this.state.board;\r\n\r\n\t\treturn positions.some((pos) => {\r\n\t\t\tif (\r\n\t\t\t\tpos.x >= CONST.WIDTH ||\r\n\t\t\t\tpos.x < 0 ||\r\n\t\t\t\tpos.y >= CONST.HEIGHT ||\r\n\t\t\t\tpos.y < 0\r\n\t\t\t) {\r\n\t\t\t\t// Outof Bounds\r\n\t\t\t\treturn true;\r\n\t\t\t} else if (board[pos.y][pos.x]) {\r\n\t\t\t\t//Collision on the Board\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t});\r\n\t};\r\n\r\n\tresetTimeout = () => {\r\n\t\tclearTimeout(this.timeOut);\r\n\t\tthis.timeOut = setTimeout(this.nextDrop, this.dropTime);\r\n\t};\r\n\r\n\thandleKeyPress = (e) => {\r\n\t\tif (this.state.isDisplay) {\r\n\t\t\tthis.forceUpdate();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet keyCode = e.code;\r\n\t\tlet copyTetromino = JSON.parse(JSON.stringify(this.state.tetromino));\r\n\r\n\t\tlet downFlag = false;\r\n\r\n\t\tswitch (keyCode) {\r\n\t\t\tcase \"ArrowLeft\":\r\n\t\t\t\tcopyTetromino.origin.x--;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"ArrowRight\":\r\n\t\t\t\tcopyTetromino.origin.x++;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"ArrowUp\":\r\n\t\t\t\tconst orientations = {\r\n\t\t\t\t\tI: CONST.I_ORIENT,\r\n\t\t\t\t\tJ: CONST.J_ORIENT,\r\n\t\t\t\t\tL: CONST.L_ORIENT,\r\n\t\t\t\t\tZ: CONST.Z_ORIENT,\r\n\t\t\t\t\tS: CONST.S_ORIENT,\r\n\t\t\t\t\tT: CONST.T_ORIENT,\r\n\t\t\t\t\tO: CONST.O_ORIENT,\r\n\t\t\t\t};\r\n\t\t\t\tcopyTetromino.orient = (copyTetromino.orient + 1) % 4;\r\n\t\t\t\tcopyTetromino.cells =\r\n\t\t\t\t\torientations[copyTetromino.value][copyTetromino.orient];\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"ArrowDown\":\r\n\t\t\t\tcopyTetromino.origin.y--;\r\n\t\t\t\tdownFlag = true;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tlet score = this.state.score;\r\n\r\n\t\tif (downFlag) {\r\n\t\t\t//Reset the drop timer if the user dropped early and give bonus\r\n\t\t\tthis.resetTimeout();\r\n\t\t\tscore++;\r\n\t\t}\r\n\t\tif (this.checkCollision(copyTetromino)) {\r\n\t\t\tif (downFlag) {\r\n\t\t\t\t// User Soft dropped to bottom\r\n\t\t\t\tthis.tetrominoBottomedOut();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// No collision Update move state\r\n\t\t\tthis.setState((state) => ({\r\n\t\t\t\ttetromino: copyTetromino,\r\n\t\t\t\tscore: score,\r\n\t\t\t}));\r\n\t\t}\r\n\t};\r\n\r\n\thandleStartGame = () => {\r\n\t\tthis.reset();\r\n\t};\r\n\r\n\thandleOpenScores = () => {\r\n\t\tthis.setState({\r\n\t\t\tisDisplay: false,\r\n\t\t\tisScores: true,\r\n\t\t});\r\n\t};\r\n\r\n\thandleCloseScores = () => {\r\n\t\tthis.setState({\r\n\t\t\tisDisplay: true,\r\n\t\t\tisScores: false,\r\n\t\t});\r\n\t};\r\n\r\n\tdrawNextPiece = () => {\r\n\t\t//Draw Tetromino in que\r\n\r\n\t\tthis.ctx.beginPath();\r\n\t\tthis.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\t\tthis.ctx.save();\r\n\r\n\t\tthis.ctx.translate(-0.5 * CONST.SCALE, 2.5 * CONST.SCALE);\r\n\r\n\t\tconst tetromino = this.state.que[0];\r\n\t\tfor (let j = 0; j < tetromino.cells.length; j++) {\r\n\t\t\tfor (let i = 0; i < tetromino.cells[0].length; i++) {\r\n\t\t\t\tif (tetromino.cells[j][i]) {\r\n\t\t\t\t\tdrawCell(\r\n\t\t\t\t\t\tthis.ctx,\r\n\t\t\t\t\t\t{ x: i, y: j },\r\n\t\t\t\t\t\t// { x: 0, y: 0 },\r\n\t\t\t\t\t\toffsetVisualCenter(tetromino.value),\r\n\t\t\t\t\t\ttetromino.value,\r\n\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\tCONST.SCALE,\r\n\t\t\t\t\t\ttrue\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.ctx.restore();\r\n\t};\r\n\r\n\trender = () => {\r\n\t\treturn (\r\n\t\t\t<div className=\"grid-container\">\r\n\t\t\t\t<div className=\"score\">\r\n\t\t\t\t\t{\" \"}\r\n\t\t\t\t\tScore: <span className=\"value-text\"> {this.state.score}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Animation\r\n\t\t\t\t\tboard={this.state.board}\r\n\t\t\t\t\ttetromino={this.state.tetromino}\r\n\t\t\t\t\thandleKeyPress={this.handleKeyPress}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{this.state.isDisplay && (\r\n\t\t\t\t\t<Display\r\n\t\t\t\t\t\thandleStartGame={this.handleStartGame}\r\n\t\t\t\t\t\thandleOpenScores={this.handleOpenScores}\r\n\t\t\t\t\t\tisNewGame={this.isNewGame}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{this.state.isScores && (\r\n\t\t\t\t\t<Scores handleCloseScores={this.handleCloseScores} />\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<div className=\"flex-container\">\r\n\t\t\t\t\t<div className=\"next-piece\">\r\n\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t<div className=\"next-piece-wrapper\">\r\n\t\t\t\t\t\t\t<canvas\r\n\t\t\t\t\t\t\t\tclassName=\"next-piece-canvas border-box\"\r\n\t\t\t\t\t\t\t\tref={this.canvasRef}\r\n\t\t\t\t\t\t\t\twidth={5 * CONST.SCALE}\r\n\t\t\t\t\t\t\t\theight={4 * CONST.SCALE}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"level\">\r\n\t\t\t\t\t\tLevel\r\n\t\t\t\t\t\t<div className=\"value-text\">{~~(this.state.linesCleared / 10)}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"lines-cleared\">\r\n\t\t\t\t\t\tLines\r\n\t\t\t\t\t\t<div className=\"value-text\">{this.state.linesCleared}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nexport default Game;\r\n\r\nconst offsetVisualCenter = (value) => {\r\n\tlet offset;\r\n\tswitch (value) {\r\n\t\tcase \"I\":\r\n\t\t\toffset = { x: 1, y: -2.5 };\r\n\t\t\tbreak;\r\n\t\tcase \"O\":\r\n\t\t\toffset = { x: 2, y: -1 };\r\n\t\t\tbreak;\r\n\t\tcase \"J\":\r\n\t\tcase \"L\":\r\n\t\tcase \"S\":\r\n\t\tcase \"Z\":\r\n\t\tcase \"T\":\r\n\t\t\toffset = { x: 1.5, y: -2 };\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\toffset = { x: 0, y: 0 };\r\n\t\t\tbreak;\r\n\t}\r\n\treturn offset;\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Game from \"./components/game.jsx\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"Game\">\n\t\t\t<Game />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}